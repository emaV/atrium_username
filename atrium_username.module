<?php
include_once('atrium_username.features.inc');

/**
 * Get user name from profile node.
 *
 * Given a uid, returns the name of that account.
 *
 */
function atrium_username_get_name($uid) {
  static $users = array();
  if (!isset($users[$uid])) {
    // get data from db DIRECTLY
    $users[$uid] = db_result(db_query("SELECT title FROM {node} WHERE type='profile' AND uid=%d", $uid));
  }
  return $users[$uid];
}

/**
 * Implementation of hook_theme_registry_alter().
 * - simulate hook_preprocess for theme('username')
 * - insert an hook_preprocess_block function _before_ proper theming
 */
function atrium_username_theme_registry_alter(&$theme_registry) {

  // Get atrium_username module path.
  $atrium_username_path = drupal_get_path('module', 'atrium_username');

  // Simulate a preprocess function for theme("username").
  variable_set('theme_registry_username_function', $theme_registry['username']['function']);
  $theme_registry['username']['function'] = 'atrium_username_preprocess_username';
  $theme_registry['username']['include files'] =  array($atrium_username_path . '/atrium_username.theme.inc');

  // Theme user name in casetracker_comment_changes.
  $theme_registry['casetracker_comment_changes']['function'] = 'atrium_username_theme_casetracker_comment_changes';
  $theme_registry['casetracker_comment_changes']['include files'][] = $atrium_username_path . '/atrium_username.theme.inc';

  // Insert custom preprocessor before theming (tao/ginkgo or anything else).
  $preprocess_function = $theme_registry['block']['preprocess functions'];
  $preprocess_theme = array_slice($preprocess_function, 2);
  array_unshift($preprocess_theme, 'atrium_username_preprocess_block');
  array_splice($preprocess_function, 2, count($preprocess_function), $preprocess_theme);
  $theme_registry['block']['preprocess functions'] = $preprocess_function;
  $theme_registry['block']['include files'][] = $atrium_username_path . '/atrium_username.theme.inc';

}

/**
* Implementation of hook_form_alter().
* - views-exposed-form-casetracker-cases-page-1: casetracker filter
* - comment_form: 'Assign to' options
* - $form['notifications'] options
*/
function atrium_username_form_alter(&$form, $form_state, $form_id) {

  // casetracker filter
  if($form_id=='views_exposed_form' && $form['#id']=='views-exposed-form-casetracker-cases-page-1') {
    foreach($form['assign_to']['#options'] as $uid => $value) {
      if(is_int($uid) && $uid>0) {
        $atrium_username =  atrium_username_get_name($uid);
        if(!empty($atrium_username)) {
          $form['assign_to']['#options'][$uid] = $atrium_username;
        }
      }
    }
  }
  // comment form casetracker options
  elseif($form_id=='comment_form') {
    // Assign to
    if(!empty($form['casetracker']['assign_to']['#options'])) {
      $assign_to = $form['casetracker']['assign_to']['#options'];
      foreach($assign_to as $key => $value) {
        $uid = casetracker_get_uid($key);
        $atrium_username =  atrium_username_get_name($uid);
        $name = $atrium_username ? $atrium_username : $value;
        $form['casetracker']['assign_to']['#options'][$key] = $name;
      }
    }
  }
  // Change notification_team form options
  if(!empty($form['notifications']['notifications_team']['options']['#value'])) {
    foreach($form['notifications']['notifications_team']['options']['#value'] as $uid => $name) {
      $atrium_username =  atrium_username_get_name($uid);
      $name = $atrium_username ? $atrium_username : $name;
      $form['notifications']['notifications_team']['options']['#value'][$uid] = $name;
    }
  }
}

/**
 * Implementation of hook_views_pre_render().
 * - profile_display.page_1: override page title
 */
function atrium_username_views_pre_render(&$view) {

  // set title for profile_display (http://drupal.org/node/1176080)
  if($view->name == 'profile_display' && $view->current_display == 'page_1') {
    $uid = $view->args[0];
    $atrium_username = atrium_username_get_name($uid);
    if(!empty($atrium_username)) {
      drupal_set_title($atrium_username);
    }
  }
}

